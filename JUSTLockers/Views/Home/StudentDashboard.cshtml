@model IEnumerable<JUSTLockers.Classes.Report>
@using JUSTLockers.Classes

@{
    int index = 0;
    
    bool hasLocker = ViewBag.HasLocker != null && (bool)ViewBag.HasLocker;

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>JUSTLocker - Student Dashboard</title>
   
    <!-- Font Awesome CDN for icons -->
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/student.css" />
    <link rel="stylesheet" href="~/css/reports - Student.css" />
    <style>


        /* Main Content */
        .main-content {
            flex: 1;
            padding: 20px 40px 40px; /* reduce top padding to use space more efficiently */
            overflow-y: auto;
            animation: fadeIn 1s ease;
            max-width: 1200px;
            margin: auto;
        }



        /* Motivational Quote */
        .motivational-quote {
            background: #fdf9e8;
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 20px;
            font-size: 18px;
            color: #555;
            animation: fadeIn 2s ease;
            text-align: center;
        }

        /* Overview Cards */
        .overview-cards {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .card {
            flex: 1;
            min-width: 300px;
            background: #ffffff;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            padding: 20px;
            animation: slideUp 1.2s ease;
        }

            .card h3 {
                margin-bottom: 15px;
                color: #555;
            }

        .progress-bar {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .progress-step {
            background: #f6db75;
            color: #666;
            padding: 8px 10px;
            border-radius: 50px;
            font-size: 12px;
            transition: background 0.5s ease;
        }

            .progress-step.active {
                background: green;
                font-weight: bold;
                color:white;
                
            }

        .countdown-timer {
            font-size: 24px;
            font-weight: bold;
            color: #f0c419;
            animation: blink 1s infinite alternate;
        }

        /* Reports Section */
        .reports-section {
            background: #ffffff;
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        }

            .reports-section h2 {
                margin-bottom: 20px;
                color: #555;
            }

        .reports-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

            .reports-table th,
            .reports-table td {
                padding: 12px;
                text-align: left;
                border-bottom: 1px solid #f6db75;
                color: #666;
            }

        .status {
            padding: 5px 10px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: bold;
        }

            .status.pending {
                background-color: #f4d55e;
                color: #8a6d1d;
                animation: pulse 1.5s infinite;
            }

            .status.fixed {
                background-color: #f0c419;
                color: #ffffff;
            }

        /* Tips Section */
        .tips-section {
            background: #f9e7a3;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            margin-bottom: 20px;
        }

            .tips-section h3 {
                margin-bottom: 10px;
                color: #444;
            }

        .status-tag {
            padding: 4px 10px;
            border-radius: 10px;
            font-size: 12px;
            font-weight: 600;
        }

            .status-tag.reported {
                background: #f4d55e;
                color: #7a5a00;
            }

        /* Animations */
        @@keyframes fadeIn {
            from

        {
            opacity: 0;
        }

        to {
            opacity: 1;
        }

        }

        @@keyframes slideUp {
            from

        {
            transform: translateY(20px);
            opacity: 0;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }

        }

        @@keyframes blink {
            0%

        {
            opacity: 1;
        }

        100% {
            opacity: 0.6;
        }

        }

        @@keyframes pulse {
            0%

        {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }

        100% {
            transform: scale(1);
        }

        }
    </style>
</head>

<body>


    <!-- Sidebar with icons -->
    <div class="sidebar">
        <a href="@Url.Action("StudentDashboard", "Student")" class="menu-item">
        <i class="fas fa-bars"> </i>
            <span>DashBoard</span>
            </a>
        <a href="@Url.Action("ReservationView", "Student", new { studentId = Context.Session.GetInt32("UserId") })" class="menu-item">
            <i class="fas fa-lock"></i>
            <span>Reserve</span>
        </a>
        <a href=" @Url.Action("AllAvailableLockers", "Student")" class="menu-item">
            <i class="fas fa-th-large"></i>

            <span>Lockers</span>
        </a>
        <a href="@Url.Action("ViewReservationInfo", "Student",new { studentId = Context.Session.GetInt32("UserId") })" class="menu-item">
            <i class="fas fa-bookmark"></i>
            <span>My Reservation</span>
        </a>
        <a href="@Url.Action("ReportProblem", "Student")" class="menu-item">
            <i class="fas fa-exclamation-circle"></i>
            <span>Reports</span>
        </a>

       
            <form asp-action="Logout" asp-controller="Account" method="post">
                <button type="submit" class="menu-item">
                    <i class="fas fa-sign-out-alt"></i> 
                    <span>Logout</span>
                </button>
            </form>
        
    </div>


    <!-- Main Content -->
    <div class="main-content">
        <!-- Header with Welcome & Student Info -->
        <div class="header">
            <div class="welcome">Welcome to JUSTLocker!</div>
            <div class="student-info">
                <div class="info-box"><i class="fas fa-user"></i>  <span id="admin-name">Loading...</span></div>
                <div class="info-box"><i class="fas fa-building"></i> <span id="major-name">Loading...</span></div>
            </div>
        </div>

        <!-- Motivational Quote -->
        <div class="motivational-quote">
            "Success is the sum of small efforts, repeated day in and day out."
        </div>

        <!-- Overview Cards -->
        <div class="overview-cards">
            <!-- Reservation Timeline -->
            <div class="card timeline">
                <h3>Reservation Status</h3>
                <div class="progress-bar">
                    <div class="progress-step @(hasLocker ? "" : "active")">No Reservation</div>
                    <div class="progress-step @(hasLocker ? "active" : "")">Reserved</div>
                    <div class="progress-step @(hasLocker ? "active" : "")">Active</div>
                    <div class="progress-step @(false ? "active" : "")">Expiring Soon</div> 
                </div>
            </div>

            <!-- Expiration Countdown -->
            <div class="card countdown">
                <h3>Locker Expiration</h3>
                <div class="countdown-timer" id="countdown">Loading...</div>
            </div>
        </div>

        <!-- Reports Section -->
        <div class="report-container">
        <div class="reports-section">
            <h2>My Reports</h2>
            <table class="report-table">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Report</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @if (Model == null || !Model.Any())
                    {
                        <tr>
                            <td colspan="4" class="details-row">
                                    <span >No Reports Founds. </span>
                                <a href="@Url.Action("ReportProblem", "Student")">
                                    <span class="status-tag reported">Add Report</span>
                                </a>
                            </td>
                        </tr>
                    }

                    else
                    {

                        @foreach (var report in Model)
                        {

@*                             var isReported = string.Equals(report.Status.ToString(), "REPORTED", StringComparison.OrdinalIgnoreCase);
 *@                            <tr onclick="toggleDetails(@index)">
                                <td>@(index + 1)</td>
                                <td>@report.Subject</td>
                                @*   <td class="status-tag reported">@report.Status</td> *@
                                <td><span class="status-tag reported">@report.Status</span></td>
                                @* <td>
                                    @if (isReported)
                                    {
                                        <span class="delete-icon" title="Delete" onclick="deleteReport(@report.ReportId)" event.stopPropagation();>🗑️</span>
                                    }
                                </td> *@
                            </tr>



                            @*  <tr onclick="toggleDetails(0)">
                            <td>1</td>
                            <td>Broken Locker</td>
                            <td><span class="status-tag reported">REPORTED</span></td>
                            <td><span class="delete-icon" title="Delete" onclick="deleteReport(1); event.stopPropagation();">🗑️</span></td>
                        </tr> *@
                          



                            @* 
                        <tr id="details-0" class="details-content">
                            <td colspan="4" class="details-row">
                                <strong>Statement:</strong> Lock not working properly<br />
                                <strong>Report Date:</strong> 2025-04-10<br />
                                <strong>Resolved Date:</strong> Not resolved<br />
                                <strong>Resolution Details:</strong> Not solved<br />
                                <div><strong>Image:</strong><br /><img src="locker-example.jpg" style="max-width: 200px; border: 1px solid #ccc; margin-top: 5px;" /></div>
                            </td>
                        </tr> *@


                        }
                    }
                </tbody>
            </table>
            </div>
            <br />
        <!-- Tips Section -->
        <div class="tips-section">
            <h3>Tip of the Day 💡</h3>
            <p>Always double-check that your locker is securely locked after use!</p>
        </div>
    </div>

    <!-- JavaScript for Countdown -->
    <script>
        const semesterEnd = new Date('2025-06-30T23:59:59').getTime();

        function updateCountdown() {
            const now = new Date().getTime();
            const distance = semesterEnd - now;

            if (distance < 0) {
                document.getElementById("countdown").innerText = "Expired";
                return;
            }

            const days = Math.floor(distance / (1000 * 60 * 60 * 24));
            document.getElementById("countdown").innerText = days + " days left";
        }

        setInterval(updateCountdown, 1000);
        updateCountdown();
    </script>
    <script src="~/js/DashbordAdmin.js"></script>
    <script>

        document.addEventListener("DOMContentLoaded", function () {


        fetch('/Dashboard/GetMajorJson')
        .then(response => response.json())
        .then(data => {
            const adminNameElement = document.getElementById("major-name");
            if (adminNameElement) {
                adminNameElement.textContent = data || "Unknown major";
            }
        })
        .catch(() => {
            const adminNameElement = document.getElementById("major-name");
            if (adminNameElement) {
                adminNameElement.textContent = "Error fetching major name";
            }
        });



        });


    </script>
</body>
</html>
