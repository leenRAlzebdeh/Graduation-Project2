@model IEnumerable<JUSTLockers.Classes.Cabinet>
@using JUSTLockers.Classes
@{
    ViewData["Title"] = "Cabinets List - JUST Locker";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>JUSTLocker | @ViewData["Title"]</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

    <link rel="stylesheet" href="~/css/admin.css" />
    <link rel="stylesheet" href="~/css/message.css" />
    <style>
        .table-cabinets {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            font-size: 16px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

            .table-cabinets thead {
                background-color: linear-gradient(135deg, #3b5998, #192f6a);
                color: #fff;
            }

            .table-cabinets th,
            .table-cabinets td {
                padding: 12px 15px;
                text-align: center;
                border-bottom: 1px solid #ddd;
            }

            .table-cabinets tbody tr:hover {
                background-color: rgba(0, 0, 0, 0.03);
                cursor: pointer;
            }

            .table-cabinets tbody tr:nth-child(even) {
                background-color: #f9f9f9;
            }

        body.dark-mode .table-cabinets tbody tr:nth-child(even) {
            background-color: #2a2a2a;
        }

        body.dark-mode .table-cabinets tbody tr:hover {
            background-color: rgba(255, 255, 255, 0.05);
        }

        .status-badge {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
            text-transform: capitalize;
        }

        .status-in_service {
            background-color: #d4edda;
            color: #155724;
        }

        .status-damaged {
            background-color: #f8d7da;
            color: #721c24;
        }

        .status-in_maintenance {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-out_of_service {
            background-color: #d6d8d9;
            color: #383d41;
        }

        a {
            text-decoration: none;
            color: #eee;
        }

        
        .filter-bar {
            background-color: #f9fbfd;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 30px;
        }

        .filter-bar label {
            font-weight: 500;
            font-size: 0.95rem;
        }

        .table-cabinets th {
            background-color: #0072ff;
            color: #fff;
            font-weight: 600;
        }

        .table-cabinets td,
        .table-cabinets th {
            font-size: 0.95rem;
        }

        @@media screen and (max-width: 768px) {
            .filter-bar .row .col-md-3,
            .filter-bar .row .col-md-2 {
                margin-bottom: 15px;
            }
        }

        .add-cabinet-bottom {
            text-align: center;
        }

        .btn-add {
            background: linear-gradient(to right, #00c6ff, #0072ff);
            color: white;
            padding: 14px 40px;
            border: none;
            border-radius: 30px;
            font-weight: bold;
            font-size: 1rem;
            cursor: pointer;
        }

            .btn-add:hover {
                background: linear-gradient(to right, #00c6ff, #0072ff);
                box-shadow: 0 6px 18px rgba(0, 0, 0, 0.15);
                transform: translateY(-2px);
            }



    </style>
</head>

<body>
    <!-- Sidebar -->
    <aside class="sidebar">
        <div class="brand">
            <img src="/photos/images/logo.jpeg" alt="Logo" />
            <h1>JUSTLocker</h1>
        </div>
        <ul class="menu">
            <li class="nav-item">
                <a href="@Url.Action("AdminDashboard", "Admin")">
                    <i class="fas fa-tachometer-alt"></i> Dashboard
                </a>
            </li>
            <li class="has-submenu">
                <div class="submenu-toggle">
                    <i class="fas fa-archive"></i> Cabinet Management
                </div>
                <ul class="pretty-submenu" id="cabinet-submenu">
                    <li><a href="@Url.Action("AddCabinet", "Admin")">Add Cabinet</a></li>
                    <li><a href="@Url.Action("SignCovenant", "Admin")">Sign Covenant</a></li>
                    <li><a href="@Url.Action("ViewCabinetInfo", "Admin")">Cabinets Info</a></li>
                </ul>
            </li>
            <li class="has-submenu">
                <div class="submenu-toggle">
                    <i class="fas fa-user-graduate"></i> Employee Management
                </div>
                <ul class="pretty-submenu" id="Employee-submenu">
                    <li><a href="@Url.Action("ViewSupervisorInfo", "Admin")">Employees Info</a></li>
                    <li><a href="@Url.Action("AddSupervisor", "Admin")">Add Supervisor</a></li>
                </ul>
            </li>
            <li class="nav-item">
                <a href="@Url.Action("LockerIssues", "Admin")">
                    <i class="fas fa-tachometer-alt"></i> Reports
                </a>
            </li>
            <li class="nav-item">
                <a href="@Url.Action("Settings", "Admin")">
                    <i class="fas fa-cog"></i> Settings
                </a>
            </li>
        </ul>
    </aside>

    <!-- Main Content -->
    <main class="main-content">
        <!-- Header -->
        <header class="hero-header">
            <img class="hero-bg" src="/photos/images/lockers.png" alt="Hero Background" />
            <div class="hero-overlay"></div>
            <div class="hero-content">
                <h2>Cabinet Information</h2>
                <div class="profile">
                    <button id="dark-mode-toggle"><i class="fas fa-moon"></i></button>
                    <div class="admin-info">
                        <img src="/photos/images/adminpic.jpg" alt="Admin Profile" />
                        <span id="admin-name">@(User.Identity?.Name ?? "Admin")</span>
                    </div>
                </div>
            </div>
        </header>

        <!-- Content Section -->
        <section class="management">
           


            @if (TempData["SuccessMessage"] != null)
            {
                <div class="message-box success">@TempData["SuccessMessage"]</div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="message-box error">@TempData["ErrorMessage"]</div>
            }
            <!--newwww-->
            <!-- Filter and Search Controls -->
           
            <div class="container mt-4">
                <div class="filter-bar row g-2">
                    <div class="col-md-2">
                        <label class="form-label">Location</label>
                        <select class="form-select" id="filter-location">
                            <option value="all">All</option>
                            <option value="engineering">Engineering</option>
                            <option value="medicine">Medicine</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Department</label>
                        <select class="form-select" id="filter-department">
                            <option value="all">All</option>
                            <option value="a">A</option>
                            <option value="n">N</option>
                            <option value="ph">PH</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Wing</label>
                        <select class="form-select" id="filter-wing">
                            <option value="all">All</option>
                            <option value="0">0</option>
                            <option value="1">1</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Level</label>
                        <select class="form-select" id="filter-level">
                            <option value="all">All</option>
                            <option value="0">0</option>
                            <option value="1">1</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Search</label>
                        <input type="text" id="filter-search" class="form-control" placeholder="Search...">
                    </div>
                </div>

                <!-- Cabinet Table -->
                <div class="table-responsive mt-4">
                    <table class="table-cabinets table">
                        <thead>
                            <tr>
                                <th>Cabinet Number</th>
                                <th>Location</th>
                                <th>Department</th>
                                <th>Wing</th>
                                <th>Level</th>
                                <th>Cabinet ID</th>
                                <th>Capacity</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody id="cabinet-table-body">
                            <tr><td>0</td><td>Engineering</td><td>A</td><td>0</td><td>0</td><td>A2-L0-cab0</td><td>5</td><td><span class="status-badge">In Service</span></td></tr>
                            <tr><td>1</td><td>Engineering</td><td>A</td><td>0</td><td>0</td><td>A1-L0-cab1</td><td>6</td><td><span class="status-badge">In Service</span></td></tr>
                            <tr><td>2</td><td>Engineering</td><td>N</td><td>0</td><td>0</td><td>N1-L0-cab2</td><td>7</td><td><span class="status-badge">In Service</span></td></tr>
                            <tr><td>3</td><td>Medicine</td><td>PH</td><td>0</td><td>1</td><td>PH2-L1-cab4</td><td>4</td><td><span class="status-badge">In Service</span></td></tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="add-cabinet-bottom text-center mt-4">

                <a href="@Url.Action("AddCabinet", "Admin")" class="btn btn-add">
                    <i class="fas fa-plus"></i> Add Cabinet 
                </a>
            </div>
        </section>
    </main>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/admin.js"></script>
    <script>
        // Sidebar submenu toggle
        document.getElementById("cabinet-management-toggle")?.addEventListener("click", function () {
            const submenu = document.getElementById("cabinet-submenu");
            submenu.classList.toggle("show");
        });

        document.getElementById("Employee-management-toggle")?.addEventListener("click", function () {
            const submenu = document.getElementById("Employee-submenu");
            submenu.classList.toggle("show");
        });

        // Dark Mode Toggle
        document.getElementById("dark-mode-toggle")?.addEventListener("click", function () {
            document.body.classList.toggle("dark-mode");
            const icon = this.querySelector("i");
            icon.classList.toggle("fa-moon");
            icon.classList.toggle("fa-sun");

            // Save preference to localStorage
            const isDarkMode = document.body.classList.contains("dark-mode");
            localStorage.setItem("darkMode", isDarkMode);
        });

        // Check for saved dark mode preference
        if (localStorage.getItem("darkMode") === "true") {
            document.body.classList.add("dark-mode");
            const icon = document.getElementById("dark-mode-toggle")?.querySelector("i");
            if (icon) {
                icon.classList.remove("fa-moon");
                icon.classList.add("fa-sun");
            }
        }
    </script>
    <script>
        const filters = {
            location: document.getElementById("filter-location"),
            department: document.getElementById("filter-department"),
            wing: document.getElementById("filter-wing"),
            level: document.getElementById("filter-level"),
            search: document.getElementById("filter-search"),
        };

        const rows = document.querySelectorAll("#cabinet-table-body tr");

        function applyFilters() {
            const location = filters.location.value.toLowerCase();
            const department = filters.department.value.toLowerCase();
            const wing = filters.wing.value;
            const level = filters.level.value;
            const search = filters.search.value.toLowerCase();

            rows.forEach(row => {
                const tds = row.querySelectorAll("td");
                const rLoc = tds[1].textContent.toLowerCase();
                const rDept = tds[2].textContent.toLowerCase();
                const rWing = tds[3].textContent;
                const rLevel = tds[4].textContent;
                const rText = row.textContent.toLowerCase();

                const matchLoc = (location === "all" || rLoc === location);
                const matchDept = (department === "all" || rDept === department);
                const matchWing = (wing === "all" || rWing === wing);
                const matchLevel = (level === "all" || rLevel === level);
                const matchSearch = rText.includes(search);

                row.style.display = matchLoc && matchDept && matchWing && matchLevel && matchSearch ? "" : "none";
            });
        }

        Object.values(filters).forEach(el => el.addEventListener("input", applyFilters));
    </script>

</body>
</html>