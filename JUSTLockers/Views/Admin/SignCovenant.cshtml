@* @model JUSTLockers.Classes.Supervisor

@{
    ViewData["Title"] = "Sign Covenant";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - JUSTLockers</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <div class="container mt-5">
        <h2 class="text-center mb-4">Sign Covenant</h2>

        <!-- Display success or error messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                @TempData["ErrorMessage"]
            </div>
        }

        <form asp-action="AssignCovenant" method="post" class="needs-validation" novalidate>
            <div class="mb-3">
                <label for="supervisorId" class="form-label">Supervisor ID</label>
                <input type="number" class="form-control" id="supervisorId" name="supervisorId" required>
                <div class="invalid-feedback">
                    Please provide a valid Supervisor ID.
                </div>
            </div>
            <div class="mb-3">
                <label for="departmentName" class="form-label">Department Name</label>
                <input type="text" class="form-control" id="departmentName" name="departmentName" required>
                <div class="invalid-feedback">
                    Please provide a Department Name.
                </div>
            </div>
            <button type="submit" class="btn btn-primary w-100">Assign Covenant</button>
        </form>

        <a href="@Url.Action("AdminDashboard")" class="btn btn-secondary mt-3 w-100">Back to Dashboard</a>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
</body>
</html> *@
@model IEnumerable<JUSTLockers.Classes.Supervisor>

@{
    ViewData["Title"] = "SignCovenant";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - JUSTLockers</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .action-buttons {
            white-space: nowrap;
        }
        .table-responsive {
            overflow-x: auto;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h2 class="text-center mb-4">Manage Covenants</h2>

        <!-- Display success or error messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                @TempData["ErrorMessage"]
            </div>
        }

        <div class="table-responsive mb-4">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Current Covenant</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var supervisor in Model.Distinct())
                    {
                        <tr>
                            <td>@supervisor.Id</td>
                            <td>@supervisor.Name</td>
                            <td>@supervisor.Email</td>
                            <td>
                                @if (supervisor.SupervisedDepartment != null)
                                {
                                    <span class="badge bg-primary">
                                        @supervisor.SupervisedDepartment.Name
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">No covenant assigned</span>
                                }
                            </td>
                            <td class="action-buttons">
                                <!-- Edit Button with Modal Trigger -->
                                <button type="button" class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#editModal-@supervisor.Id">
                                    <i class="fas fa-edit"></i> Edit
                                </button>

                                <!-- Delete Button -->
                                @if (supervisor.SupervisedDepartment != null)
                                {
                                    <form asp-action="DeleteCovenant" method="post" class="d-inline">
                                        <input type="hidden" name="supervisorId" value="@supervisor.Id" />
                                        <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this covenant?')">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    </form>
                                }
                            </td>
                        </tr>

                        <!-- Edit Modal for each supervisor -->
                        <div class="modal fade" id="editModal-@supervisor.Id" tabindex="-1" aria-labelledby="editModalLabel-@supervisor.Id" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editModalLabel-@supervisor.Id">Edit Covenant for @supervisor.Name</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <form asp-action="AssignCovenant" method="post">
                                        <div class="modal-body">
                                            <input type="hidden" name="supervisorId" value="@supervisor.Id" />
                                            <div class="mb-3">
                                                <label for="departmentName-@supervisor.Id" class="form-label">Department Name</label>
                                                <input type="text" class="form-control" id="departmentName-@supervisor.Id"
                                                       name="departmentName" value="@supervisor.SupervisedDepartment?.Name" required>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                            <button type="submit" class="btn btn-primary">Save Changes</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                </tbody>
            </table>
        </div>

        <a href="@Url.Action("AdminDashboard")" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to Dashboard
        </a>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Enable tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        // Form validation for modals
        (function () {
            'use strict'

            // Fetch all the forms we want to apply validation to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
</body>
</html>