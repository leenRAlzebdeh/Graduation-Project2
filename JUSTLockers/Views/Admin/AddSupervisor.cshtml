@model JUSTLockers.Classes.Supervisor
@using JUSTLockers.Classes;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Add Supervisor - JUSTLocker</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

    <link rel="stylesheet" href="~/css/admin.css" />
    <link rel="stylesheet" href="~/css/message.css" />
    <style>
        .form-section {
            background: #fff;
            margin: 20px;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 8px 24px rgba(0,0,0,0.08);
        }

            .form-section h2 {
                margin-bottom: 20px;
            }

        .cabinet-form {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
            margin-bottom: 30px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

            .form-group label {
                margin-bottom: 8px;
                font-weight: 600;
            }

            .form-group input,
            .form-group select {
                padding: 10px 15px;
                border-radius: 25px;
                border: 1px solid #ccc;
                font-family: "Poppins", sans-serif;
                font-size: 0.95rem;
            }

                .form-group input:focus,
                .form-group select:focus {
                    outline: none;
                    border-color: #3b5998;
                }

        .submit-btn {
            text-align: center;
            margin-top: 20px;
        }

            .submit-btn button {
                background: linear-gradient(to right, #00c6ff, #0072ff);
                color: white;
                padding: 14px 40px;
                border: none;
                border-radius: 30px;
                font-weight: bold;
                font-size: 1rem;
                cursor: pointer;
            }

                .submit-btn button:hover {
                    opacity: 0.9;
                }

        body.dark-mode .form-section {
            background: #2e2e2e;
            color: #ccc;
        }

        body.dark-mode .form-group input,
        body.dark-mode .form-group select {
            background: #3a3a3a;
            color: #eee;
            border-color: #555;
        }

        #department-container {
            display: none;
            transition: opacity 0.3s ease;
        }

        a {
            text-decoration: none;
            color: #eee;
        }


    </style>
</head>
<body>
    <!-- Sidebar -->
    <aside class="sidebar">
        <div class="brand">
            <img src="/photos/images/logo.jpeg" alt="Logo" />
            <h1>JUSTLocker</h1>
        </div>
        <ul class="menu">
            <li class="nav-item">
                <a href="@Url.Action("AdminDashboard", "Admin")">
                    <i class="fas fa-tachometer-alt"></i> Dashboard
                </a>
            </li>
            <li class="has-submenu">
                <div class="submenu-toggle">
                    <i class="fas fa-archive"></i> Cabinet Management
                </div>
                <ul class="pretty-submenu" id="cabinet-submenu">
                    <li><a href="@Url.Action("AddCabinet", "Admin")">Add Cabinet</a></li>
                    <li><a href="@Url.Action("SignCovenant", "Admin")">Sign Covenant</a></li>
                    <li><a href="@Url.Action("ViewCabinetInfo", "Admin")">Cabinets Info</a></li>
                </ul>
            </li>
            <li class="has-submenu">
                <div class="submenu-toggle">
                    <i class="fas fa-user-graduate"></i> Employee Management
                </div>
                <ul class="pretty-submenu" id="Employee-submenu">
                    <li><a href="@Url.Action("ViewSupervisorInfo", "Admin")">Employees Info</a></li>
                    <li><a href="@Url.Action("AddSupervisor", "Admin")">Add Supervisor</a></li>
                </ul>
            </li>
            <li class="nav-item">
                <a href="@Url.Action("LockerIssues", "Admin")">
                    <i class="fas fa-tachometer-alt"></i> Reports
                </a>
            </li>
            <li class="nav-item">
                <a href="@Url.Action("Settings", "Admin")">
                    <i class="fas fa-cog"></i> Settings
                </a>
            </li>
        </ul>
    </aside>

    <!-- Main Content -->
    <main class="main-content">
        <!-- Header -->
        <header class="hero-header">
            <img class="hero-bg" src="/photos/images/lockers.png" alt="Hero Background" />
            <div class="hero-overlay"></div>
            <div class="hero-content">
                <h2>Add Supervisor</h2>
                <div class="profile">
                    <button id="dark-mode-toggle"><i class="fas fa-moon"></i></button>
                    <div class="admin-info">
                        <img src="/photos/images/adminpic.jpg" alt="Admin Profile" />
                        <span id="admin-name">Loading...</span>
                    </div>
                </div>
            </div>
        </header>

        <!-- Form Section -->
        <section class="form-section">
            <h2>Add New Supervisor</h2>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="message-box success">@TempData["SuccessMessage"]</div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="message-box error">@TempData["ErrorMessage"]</div>
            }

            <form class="super-form" asp-controller="Admin" asp-action="AddSupervisor" method="post">
                <div class="form-group">
                    <label>Employee Id</label>
                    <input type="text" id="Id" name="Id" required placeholder="Enter ID Num." />
                </div>

                <div class="form-group">
                    <label>Name</label>
                    <input type="text" id="Name" name="Name" readonly />
                </div>

                <div class="form-group">
                    <label>Email</label>
                    <input type="text" id="Email" name="Email" readonly />
                </div>

                <div class="form-group">
                    <label>Location <span style="color: darkblue; opacity: 0.5; font-size:small"> (Optional)</span> </label>
                    <select id="Location" name="Location">
                        <option value="">Select</option>
                        <option value="Engineering">Engineering</option>
                        <option value="Medicine">Medicine</option>
                    </select>
                </div>

                <div class="form-group"  id="department-container">
                    <label>Assign To Department <span style="color: darkblue; opacity: 0.5; font-size:small"> </span></label>
                    <select id="DepartmentName" name="DepartmentName">
                        <option value="">Select Location First</option>
                    </select>
                </div>

                <div class="submit-btn">
                    <button type="submit">Add Supervisor</button>
                </div>
            </form>
        </section>
    </main>
    <script src="~/js/admin.js"></script>
    <script>
        const empIdInput = document.getElementById("Id");
        const locationSelect = document.getElementById("Location");
        const departmentSelect = document.getElementById("DepartmentName");
        const departmentContainer = document.getElementById("department-container");

        locationSelect.disabled = true;
        departmentSelect.disabled = true;

        empIdInput.addEventListener("change", function () {
            const empId = empIdInput.value;

            fetch(`/Admin/GetEmployee?Id=${encodeURIComponent(empId)}`)
                .then(response => response.json())
                .then(data => {
                    const supervisorInput = document.getElementById("Name");
                    const emailInput = document.getElementById("Email");

                    if (data.status === "Success") {
                        supervisorInput.value = data.employee;
                        emailInput.value = data.email;

                        locationSelect.disabled = false;
                        departmentSelect.disabled = false;
                    } else {
                        supervisorInput.value = "notfound";
                        emailInput.value = "notfound";

                        locationSelect.disabled = true;
                        departmentSelect.disabled = true;
                        departmentContainer.style.display = "none";
                    }
                })
                .catch(() => {
                    document.getElementById("Name").value = "Error fetching supervisor";
                    document.getElementById("Email").value = "Error";
                    locationSelect.disabled = true;
                    departmentSelect.disabled = true;
                    departmentContainer.style.display = "none";
                });
        });

        document.addEventListener("DOMContentLoaded", function () {
            locationSelect.addEventListener("change", function () {
                const selectedLocation = this.value;

                if (selectedLocation) {
                    departmentContainer.style.display = "block";
                } else {
                    departmentContainer.style.display = "none";
                    departmentSelect.innerHTML = '<option value="">Select Location First</option>';
                    return;
                }

                fetch(`/Cabinet/GetDepartments?Location=${encodeURIComponent(selectedLocation)}`)
                    .then(response => response.json())
                    .then(data => {
                        departmentSelect.innerHTML = "";

                        data.forEach(dept => {
                            const option = document.createElement("option");
                            option.value = dept;
                            option.textContent = dept;
                            departmentSelect.appendChild(option);
                        });

                        departmentSelect.dispatchEvent(new Event("change"));
                    });
            });

            // Dark Mode Toggle
            document.getElementById("dark-mode-toggle").addEventListener("click", function () {
                document.body.classList.toggle("dark-mode");
                const icon = this.querySelector("i");
                icon.classList.toggle("fa-moon");
                icon.classList.toggle("fa-sun");
            });

            // Sidebar submenu toggle
            document.getElementById("cabinet-management-toggle").addEventListener("click", function () {
                const submenu = document.getElementById("cabinet-submenu");
                submenu.classList.toggle("show");
            });
        });
    </script>
</body>
</html>
