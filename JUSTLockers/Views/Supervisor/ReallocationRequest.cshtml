@{
    ViewData["Title"] = "Reallocate Cabinet";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Reallocate Cabinet</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/admin.css" />
    <link rel="stylesheet" href="~/css/message.css" />
    <link rel="stylesheet" href="~/css/SupervisorView.css" />


    <style>


        .container {
            width:95% ; /* Use full width minus sidebar */
           /*  margin-left: 260px; */ /* Align right next to sidebar */
            margin-top: 2rem; /* Space below header */
            background-color: #fff;
            padding: 2rem;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        h2 {
            margin-bottom: 2rem;
            text-align: center;
            color:#ffff;
        }

        .cabinet-form .form-label {
            font-weight: 600;
            color: #333;
        }

        .cabinet-form .form-control,
        .cabinet-form .form-select {
            border-radius: 10px;
            padding: 0.5rem 0.75rem;
            border: 1px solid #ddd;
            box-shadow: none;
            transition: border-color 0.2s ease-in-out;
        }

            .cabinet-form .form-control:focus,
            .cabinet-form .form-select:focus {
                border-color: #007bff;
                box-shadow: 0 0 0 0.1rem rgba(0, 123, 255, 0.25);
            }

        .cabinet-form button {
            border-radius: 10px;
            font-weight: 600;
            padding: 0.6rem;
            background-color: #007bff;
            border: none;
            transition: background-color 0.2s ease-in-out;
        }

            .cabinet-form button:hover {
                background-color: #0056b3;
            }

       


        .is-invalid {
            border-color: #dc3545;
            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <aside class="sidebar">
        <div class="brand">
            <img src="/photos/images/logo.jpeg" alt="Logo" />
            <h1>JUSTLocker</h1>
        </div>

        <ul class="menu">
            <li class="nav-item">
                <a href="@Url.Action("SupervisorDashboard", "Supervisor")">
                    <i class="fas fa-tachometer-alt"></i>
                    <span>Dashboard</span>
                </a>
            </li>

            <li class="has-submenu">
                <div class="submenu-toggle">
                    <i class="fas fa-archive"></i>
                    <span>Report Management</span>
                    <i class="fas fa-chevron-down arrow"></i>
                </div>
                <ul class="pretty-submenu" id="cabinet-submenu">
                    <li><a href="@Url.Action("BlockStudent", "Supervisor")">Block Student</a></li>
                    <li><a href="@Url.Action("ReportedIssues", "Supervisor")">Reported Issues</a></li>
                    <li><a href="@Url.Action("ViewStudentInfo", "Supervisor")">Students Info</a></li>
                </ul>
            </li>

            <li class="has-submenu">
                <div class="submenu-toggle">
                    <i class="fas fa-user-graduate"></i>
                    <span>Cabinets Management</span>
                    <i class="fas fa-chevron-down arrow"></i>
                </div>
                <ul class="pretty-submenu" id="Employee-submenu">
                    <li><a href="@Url.Action("ReallocationRequestForm", "Supervisor")">Reallocation/Diff Department</a></li>
                    <li><a href="@Url.Action("ReallocationRequestFormSameDepartment", "Supervisor")">Reallocation/Same Department</a></li>
                    <li><a href="@Url.Action("ViewCabinetInfoSuper", "Supervisor")">Cabinets Info</a></li>
                </ul>
            </li>

            <li class="nav-item">
                <a href="@Url.Action("Settings", "Account")">
                    <i class="fas fa-cog"></i>
                    <span>Settings</span>
                </a>
            </li>

            <li class="nav-item logout-link">
                <form asp-action="Logout" asp-controller="Account" method="post">
                    <button type="submit">
                        <i class="fas fa-sign-out-alt"></i>
                        <span>Logout</span>
                    </button>
                </form>
            </li>
        </ul>
    </aside>
    <main class="main-content">
        <!-- Header -->
        <!-- Hero / Header Section -->
        <header class="hero-header">
            <img class="hero-bg" src="/photos/images/lockers.png" alt="Hero Background" />
            <div class="hero-overlay"></div>
            <div class="hero-content">
                <h2> Reallocate Cabinet ~ Different Department </h2>
                <div class="profile">
                    <button id="dark-mode-toggle"><i class="fas fa-moon"></i></button>
                    <div class="admin-info">
                        <img src="/photos/images/adminpic.jpg" alt="Admin Profile" />
                        <span id="admin-name">Loading...</span>
                    </div>
                </div>
            </div>
        </header>
       

    <div class="container">
       
        <form method="post" asp-action="ReallocationRequest" asp-controller="Supervisor" class="cabinet-form">

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="message-box success">@TempData["SuccessMessage"]</div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="message-box error">@TempData["ErrorMessage"]</div>
            }
            @if (TempData["cabinetError"] != null)
            {
                <div class="message-box error">@TempData["cabinetError"]</div>
            }



            <input type="hidden" name="NumberCab" id="NumberCab" />
            <h4>Current Cabinet </h4>
            <div class="row g-3 align-items-end">
                <div class="col-sm-6 col-md-2">
                    <label for="SupervisorID" class="form-label">Supervisor ID</label>
                    <input type="text" class="form-control" name="SupervisorID" id="SupervisorID" required />


                </div>
                <div class="col-sm-6 col-md-2">
                    <label for="CurrentCabinetID" class="form-label">Cabinet ID</label>
                    <input type="text" class="form-control" name="CurrentCabinetID" id="CurrentCabinetID" required />
                    <div id="cabinetError" class="text-danger mt-1" style="display:none;">Cabinet not found.</div>
                   


                </div>
                <div class="col-sm-6 col-md-2">
                    <label for="CurrentLocation" class="form-label">Location</label>
                    <input type="text" class="form-control" name="CurrentLocation" id="CurrentLocation" readonly required />
                </div>

                <div class="col-sm-6 col-md-2">
                    <label for="CurrentDepartment" class="form-label">Department</label>
                    <input type="text" class="form-control" name="CurrentDepartment" id="CurrentDepartment" readonly required />
                </div>

                <div class="col-sm-6 col-md-2">
                    <label for="wing" class="form-label">Wing</label>
                    <input type="number" class="form-control" name="wing" id="wing" readonly required />
                </div>

                <div class="col-sm-6 col-md-2">
                    <label for="level" class="form-label">Level</label>
                    <input type="number" class="form-control" name="level" id="level" readonly required />
                </div>

              

               
                <div class="row g-3 align-items-end">

                    <h4>Requested Cabinet </h4>
                     <div class="col-sm-6 col-md-2">
                        <label for="RequestLocation" class="form-label">Location</label>
                        <select id="RequestLocation" name="RequestLocation" class="form-select" required>
                            <option value="">Select</option>
                            <option value="Engineering">Engineering</option>
                            <option value="Medicine">Medicine</option>
                        </select>
                    </div>

                    <div class="col-sm-6 col-md-2">
                        <label for="RequestedDepartment" class="form-label">Department</label>
                        <select id="RequestedDepartment" name="RequestedDepartment" class="form-select" required>
                            <option value="">Select</option>

                        </select>
                    </div>
                   
                    <div class="col-sm-6 col-md-2">
                        <label for="RequestWing" class="form-label">Wing</label>
                        <select id="RequestWing" name="RequestWing" class="form-select" required>
                            <option value="">Select</option>
                        </select>
                    </div>

                    <div class="col-sm-6 col-md-2">
                        <label for="RequestLevel" class="form-label">Level</label>
                        <select id="RequestLevel" name="RequestLevel" class="form-select" required>
                            <option value="">Select</option>
                            <option>0</option>
                            <option>1</option>
                            <option>2</option>
                            <option>3</option>

                        </select>
                    </div>

                   

                <div class="col-sm-6 col-md-2 d-grid">
                    <label class="form-label">&nbsp;</label>
                        <button type="submit" id="submitBtn" disabled class="btn btn-primary">
                        <i class="fas fa-check-circle"></i> Submit
                    </button>
                </div>

            </div>
        </form>
    </div>

       
    </main>

    @{
        int? userId = Context.Session.GetInt32("UserId");
    }
    
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <script src="~/js/admin.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {

            // Location change event
            document.getElementById("RequestLocation").addEventListener("change", function () {
                const selectedLocation = this.value;
                const departmentSelect = document.getElementById("RequestedDepartment");

                fetch(`/Cabinet/GetDepartments?location=${encodeURIComponent(selectedLocation)}`)
                    .then(response => response.json())
                    .then(data => {
                        departmentSelect.innerHTML = "";
                        const defaultOption = document.createElement("option");
                        defaultOption.textContent = "All Dep";
                        departmentSelect.appendChild(defaultOption);

                        data.forEach(dept => {
                            const option = document.createElement("option");
                            option.value = dept;
                            option.textContent = dept;
                            departmentSelect.appendChild(option);
                        });

                        departmentSelect.dispatchEvent(new Event("change")); // Trigger to load wings and supervisor
                    });
            });




                   // Department change event
        document.getElementById("RequestedDepartment").addEventListener("change", function () {
            const department = this.value;
            const location = document.getElementById("RequestLocation").value;

            const wingSelect = document.getElementById("RequestWing");

            fetch(`/Cabinet/GetWings?departmentName=${encodeURIComponent(department)}`)
                .then(response => response.json())
                .then(data => {
                    // Clear existing options
                    wingSelect.innerHTML = "";

                    // Optional: Add a default placeholder
                    const defaultOption = document.createElement("option");
                    defaultOption.text = "Select";
                    defaultOption.disabled = true;
                    defaultOption.selected = true;
                    wingSelect.appendChild(defaultOption);

                    // Add new options
                    data.forEach(wing => {
                        const option = document.createElement("option");
                        option.value = wing;
                        option.textContent = wing;
                        wingSelect.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error("Error fetching wings:", error);
                });
        });


            // Automatically trigger location change to load departments
            document.getElementById("RequestLocation").dispatchEvent(new Event("change"));



        });
    </script>
    <script src="~/js/message.js"></script>
    <script src="~/js/DashbordAdmin.js"></script>

    <script src="~/js/admin.js"></script>
    <script>
        function cancelStudentInfo() {
            document.getElementById("studentInfo").style.display = "none";
            document.getElementById("notFoundMsg").style.display = "none";
        }
    </script>
    <script>
        document.querySelectorAll('.submenu-toggle').forEach(toggle => {
            toggle.addEventListener('click', () => {
                const parent = toggle.closest('.has-submenu');
                parent.classList.toggle('open');
            });
        });
    </script>
    <script>


        document.addEventListener("DOMContentLoaded", function () {


             var userId = @(userId ?? 0);

            document.getElementById("SupervisorID").value = userId;


             const cabinetIdInput = document.getElementById("CurrentCabinetID");

        cabinetIdInput.addEventListener("blur", function () {
            const cabId = cabinetIdInput.value.trim();
            if (!cabId) return;

            fetch(`/Cabinet/GetCabinet?cabinet_id=${cabId}`)
                .then(response => response.json())
                .then(data => {
                           if (data) {
            cabinetIdInput.classList.remove("is-invalid");
            document.getElementById("cabinetError").style.display = "none";

            document.querySelector('input[name="NumberCab"]').value = data.number_cab;
            document.querySelector('input[name="CurrentLocation"]').value = data.location;
            document.querySelector('input[name="CurrentDepartment"]').value = data.department_name;
            document.querySelector('input[name="wing"]').value = data.wing;
            document.querySelector('input[name="level"]').value = data.level;
            document.getElementById("submitBtn").disabled = false;
        } else {
            cabinetIdInput.classList.add("is-invalid");
            document.getElementById("cabinetError").style.display = "block";

            document.querySelector('input[name="NumberCab"]').value = "";
            document.querySelector('input[name="CurrentLocation"]').value = "";
            document.querySelector('input[name="CurrentDepartment"]').value = "";
            document.querySelector('input[name="wing"]').value = "";
            document.querySelector('input[name="level"]').value = "";
               document.getElementById("submitBtn").disabled = true;
        }
                })
                .catch(error => {
                   // console.error("Error fetching cabinet info:", error);
                    alert("Failed to fetch cabinet info.");
                });
        });
                cabinetIdInput.addEventListener("input", () => {
            cabinetIdInput.classList.remove("is-invalid");
            document.getElementById("cabinetError").style.display = "none";
        });

        });
        
    </script>
</body>
</html>
